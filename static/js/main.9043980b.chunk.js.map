{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/Section/Section.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","section","ContactForm","existingContacts","onFormSubmit","useState","name","setName","number","setNumber","onInputChange","event","target","value","form","onSubmit","preventDefault","find","existingContact","alert","label","input","type","pattern","title","required","autoComplete","onChange","button","Filter","onFilterChange","isFilterActive","disabled","ContactList","contacts","onDeleteButtonClick","list","map","uid","item","wrapper","onClick","App","JSON","parse","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","filteredContacts","contact","toLowerCase","includes","isAnyContact","length","Section","user","uuidv4","state","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9043980b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1mqqi\",\"label\":\"ContactForm_label__1S__p\",\"input\":\"ContactForm_input__2FUEx\",\"button\":\"ContactForm_button__2hv__\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__x1EAh\",\"wrapper\":\"ContactList_wrapper__2vAmd\",\"item\":\"ContactList_item__3M8v1\",\"button\":\"ContactList_button__1g2p_\",\"name\":\"ContactList_name__1gG81\",\"number\":\"ContactList_number__2MrAb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3kIHR\",\"input\":\"Filter_input__Ojz6D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3ZGN9\"};","import styles from './Section.module.css';\r\n\r\nfunction Container({ children }) {\r\n    return (\r\n        <div className={styles.section}>{children}</div>\r\n    );\r\n}\r\n\r\nexport default Container;","import { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ContactForm.module.css';\r\n\r\nfunction ContactForm({existingContacts, onFormSubmit}) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const onInputChange = event => {\r\n        const { name, value } = event.target;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n    const onInputReset = () => {\r\n        setName('');\r\n        setNumber('');\r\n    }\r\n\r\n    const HandleFormSubmit = event => {\r\n        event.preventDefault();\r\n        \r\n        const existingContact = existingContacts.find(existingContact => {\r\n            return existingContact.name === name;\r\n        });\r\n        if (existingContact) {\r\n            alert('Contact already exists. Try another name');\r\n            setName('');\r\n            return;\r\n        }\r\n        onFormSubmit({name, number});\r\n        onInputReset();\r\n    }\r\n\r\n        return (\r\n            <form className={styles.form} onSubmit={HandleFormSubmit}>\r\n                <label className={styles.label}>\r\n                    Name\r\n                    <input\r\n                        className={styles.input}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                        onChange={onInputChange}\r\n                    />\r\n                </label>\r\n                <label className={styles.label}>\r\n                    Number\r\n                    <input\r\n                        className={styles.input}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={number}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                        onChange={onInputChange}\r\n                    />\r\n                </label>\r\n                <button className={styles.button} type=\"submit\">Add a contact</button>\r\n            </form>\r\n        );\r\n}\r\n\r\nContactForm.propTypes = {\r\n    existingContacts: PropTypes.arrayOf(PropTypes.object),\r\n    onFormSubmit: PropTypes.func\r\n}\r\n\r\nexport default ContactForm;","import PropTypes from 'prop-types';\r\n\r\nimport styles from './Filter.module.css';\r\n\r\n\r\nfunction Filter({onFilterChange, isFilterActive}) {\r\n\r\n    const onFilterInputChange = event => {\r\n        const {value} = event.target;\r\n        onFilterChange(value);\r\n    }\r\n\r\n    return (\r\n        <label className={styles.label}>\r\n            Find contacts by name\r\n            <input\r\n                className={styles.input}\r\n                type=\"text\"\r\n                name=\"filter\"\r\n                autoComplete=\"off\"\r\n                disabled={!isFilterActive}\r\n                onChange={onFilterInputChange}\r\n            />\r\n        </label>\r\n    );\r\n}\r\n\r\nFilter.propTypes = {\r\n    onFilterChange: PropTypes.func\r\n}\r\n\r\nexport default Filter;","import PropTypes from 'prop-types';\r\n\r\nimport styles from './ContactList.module.css';\r\n\r\n\r\nfunction ContactList({contacts, onDeleteButtonClick}) {\r\n\r\n    return (\r\n        <ul className={styles.list}>\r\n            {contacts.map(({uid, name, number}) => {\r\n                return (\r\n                    <li className={styles.item} key={uid}>\r\n                        <div className={styles.wrapper}>\r\n                            <p className={styles.name}>{name}</p>\r\n                            <span className={styles.number}>{number}</span>\r\n                            <button className={styles.button}\r\n                                    onClick={() => onDeleteButtonClick(uid)}>Delete\r\n                            </button>\r\n                        </div>\r\n                    </li>\r\n                );\r\n            })}\r\n        </ul>\r\n    );\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.object),\r\n    onDeleteButtonClick: PropTypes.func\r\n}\r\n\r\nexport default ContactList;","import {useState, Fragment, useEffect} from \"react\";\nimport {v4 as uuidv4} from 'uuid';\n\nimport Section from \"./components/Section\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from './components/Filter';\nimport ContactList from \"./components/ContactList\";\n\n\nfunction App() {\n\n    const [contacts, setContacts] = useState(() => {\n        return JSON.parse(localStorage.getItem('savedContacts')) ?? []\n    });\n    const [filter, setFilter] = useState('');\n\n\n    useEffect(() => {\n        localStorage.setItem('savedContacts', JSON.stringify(contacts));\n    }, [contacts])\n\n    const handleFormSubmit = user => {\n        const uid = uuidv4();\n        const contact = {uid, ...user};\n\n        setContacts(state => [contact, ...state]);\n    }\n\n    const handleDeleteContact = id => {\n        setContacts(contacts.filter(contact => contact.uid !== id));\n    }\n\n    const filteredContacts = contacts.filter(contact => {\n        return contact.name.toLowerCase().includes(filter.toLowerCase())\n    })\n    const isAnyContact = contacts.length > 0;\n\n    return (\n        <Fragment>\n            <Section>\n                <h1 className=\"\">Phonebook</h1>\n                <ContactForm\n                    onFormSubmit={handleFormSubmit}\n                    existingContacts={contacts}\n                />\n            </Section>\n            <Section>\n                <h2 className=\"\">Contacts</h2>\n                <Filter\n                    onFilterChange={setFilter}\n                    isFilterActive={isAnyContact}\n                />\n                <ContactList\n                    contacts={filteredContacts}\n                    onDeleteButtonClick={handleDeleteContact}\n                />\n            </Section>\n        </Fragment>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n"],"sourceRoot":""}